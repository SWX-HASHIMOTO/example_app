#Deploy Docker Image to AWS ECS Fargate
variables:
    BUILD_DOCKER_IMAGE: "ev250inu22/react-app" 
    BUILD_DOCKER_IMAGE_VERSION: "V4"
    UI_BASE_IMAGE: "node:14.17.4-stretch"
    DOCKER_CLIENT_IMAGE: "docker:20.10.16"
    DOCKER_DIND_IMAGE: "docker:20.10.16-dind"   
  # Predefined CI/CD variables, print all pipeline debug info. .
  # CI_DEBUG_TRACE: "true"
    # These can be specified per job or per pipeline
    FF_USE_FASTZIP: "true"      
    ARTIFACT_COMPRESSION_LEVEL: "fast" 
    CACHE_COMPRESSION_LEVEL: "fast" 

stages: 
   - init
   - build
   - test
   - publish 
   - deploy


# Install UI Build Cache
install_ui_build_artifacts_as_cache:
  stage: init 
  # init npm cache 
  image: "$UI_BASE_IMAGE"
  script:  
    - npm install 
  artifacts:
  #   untracked: true
      expire_in: 2 hrs
      paths:
          - node_modules/   

# Build UI App
ui_build:
  stage: build  
  image: "$UI_BASE_IMAGE"
  # Build React UI APP 
  script:   
    - npm run build
    # Run React Unit Test
    - npm test
  cache:
    untracked: true   
    key: binaries-cache-${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/ 
    policy: pull   
  # artifacts build result  
  artifacts:
  #   untracked: true
      expire_in: 2 hrs
      paths:
          - build/ 
       
  
# Run React Build Test           
ui_build_test:   
  stage: test  
  image: "$UI_BASE_IMAGE"    
  script:  
     #- test -f build/index1.html   
     - test -f build/index.html     
  allow_failure: true         
## Build Docker Image and Push
docker_image_build_push:
  resource_group: $CI_JOB_NAME
  stage: publish
 # Variables in the .gitlab-ci.yml file
  image: "$DOCKER_CLIENT_IMAGE"  
  services:
    - "$DOCKER_DIND_IMAGE"
  before_script:
    - echo "GitLab CI/CD | Print all environment variables"
    # Print all variables
    - env
    # Project CI/CD variables, $CI_REGISTRY_USER and $CI_REGISTRY_PASSWORD
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 
  script:  
    # Build Docker Image
    - docker build -t "$BUILD_DOCKER_IMAGE":"$BUILD_DOCKER_IMAGE_VERSION" .
    # Push Docker Image to Dock Hub
    - docker push "$BUILD_DOCKER_IMAGE":"$BUILD_DOCKER_IMAGE_VERSION"
    # ReName tag of Docker Image to latest
    - docker tag "$BUILD_DOCKER_IMAGE":"$BUILD_DOCKER_IMAGE_VERSION" "$BUILD_DOCKER_IMAGE":latest
    # Push Docker Image with latest tag to Dock Hub
    - docker push "$BUILD_DOCKER_IMAGE":latest


deploy_docker_image_to_aws_ecs_fragate: 
  stage: deploy
  image: "$DOCKER_CLIENT_IMAGE"
  script: 
    - apk add --no-cache aws-cli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - definitions=$(cat task_definitions.json)
    - echo $definitions
    - aws ecs register-task-definition  --region "${AWS_DEFAULT_REGION}" --family "DemoAppTask" --container-definitions "$definitions" --cpu "256" --memory  "512" --network-mode  "awsvpc"  --requires-compatibilities "FARGATE" --execution-role-arn "arn:aws:iam::590183987209:role/mackerel-execution-task" 
    - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "DemoFargateCluster" --service "DemoService2"  --task-definition "DemoAppTask"
   

